services:
  postgres:
    image: postgres:latest
    container_name: dex-postgres
    environment:
      POSTGRES_USER: ${PG_USER}
      POSTGRES_PASSWORD: ${PG_PASSWORD}
      POSTGRES_DB: ${PG_DB}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: unless-stopped

  service:
    container_name: dex-service
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - RPC_URL=${RPC_URL}
      - WS_URL=${WS_URL}
      - CMC_API_KEY=${CMC_API_KEY}
      - POSTGRES_URL=${POSTGRES_URL}
      - SHRTLNK_API_KEY=${SHRTLNK_API_KEY}
      - DEX_URL=${DEX_URL}
      - VIRTUAL_HOST=${VIRTUAL_HOST}
      - LETSENCRYPT_HOST=${LETSENCRYPT_HOST}
      - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL}
    expose:
      - '9000'
    depends_on:
      - postgres
    restart: unless-stopped

  nginx-proxy:
    image: jwilder/nginx-proxy
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - nginx-certs:/etc/nginx/certs:ro
      - nginx-vhost.d:/etc/nginx/vhost.d
      - nginx-html:/usr/share/nginx/html
      - nginx-conf:/etc/nginx/conf.d
    restart: unless-stopped

  letsencrypt-nginx-proxy-companion:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: letsencrypt-nginx-proxy-companion
    environment:
      - NGINX_PROXY_CONTAINER=nginx-proxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - nginx-certs:/etc/nginx/certs:rw
      - nginx-vhost.d:/etc/nginx/vhost.d
      - nginx-html:/usr/share/nginx/html
    depends_on:
      - nginx-proxy
    restart: unless-stopped

volumes:
  postgres-data:
  nginx-certs:
  nginx-vhost.d:
  nginx-html:
  nginx-conf:
